{"version":3,"sources":["images/icon-sun.svg","images/icon-moon.svg","components/TodoHeader.tsx","redux/actions/todo.actions.tsx","components/TodoAdd.tsx","images/icon-cross.svg","components/Todo.tsx","components/TodoFilter.tsx","pages/TodosManager.tsx","App.tsx","redux/reducers/todos.reducer.tsx","redux/store.tsx","index.tsx"],"names":["TodoHeader","darkMode","setDarkMode","htmlTag","document","body","parentElement","useEffect","localStorage","getItem","setAttribute","setItem","className","onClick","src","iconSun","iconMoon","alt","ADD_TODO","DELETE_TODO","CHANGE_CHECKED_TODO","EDIT_TODO","CLEAR_COMPLETED_TODO","clearCompletedTodo","data","type","payload","TodoAdd","useState","inputValue","setInputValue","dispatch","useDispatch","newTodo","e","preventDefault","onSubmit","placeholder","value","onChange","target","maxLength","Todo","id","todo","checked","inputContent","setInputContent","isEdit","setIsEdit","cross","TodoFilter","todos","selectFilter","setSelectFilter","useMediaQuery","query","length","TodosManager","useSelector","state","filter","map","App","initialStateTodos","uuidv4","todosReducer","action","JSON","parse","stringify","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.95d6d2b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import React, { useEffect } from 'react';\r\nimport { IDarkMode } from '../pages/TodosManager';\r\nimport iconSun from '../images/icon-sun.svg';\r\nimport iconMoon from '../images/icon-moon.svg';\r\n\r\nconst TodoHeader: React.FC<IDarkMode> = ({ darkMode, setDarkMode }) => {\r\n\tconst htmlTag: any | string = document.body.parentElement;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!localStorage.getItem('theme')) {\r\n\t\t\t// Renvoie la valeur associée à la clé passée en paramètre. Ici, si il n'y a pas de value, alors ...\r\n\t\t\tsetDarkMode(true);\r\n\t\t\tlocalStorage.setItem('theme', 'light'); // Ajoute nouveau stockage, ou modifie si existe déjà : key = theme, value = light\r\n\t\t\thtmlTag.setAttribute('data-theme', 'light');\r\n\t\t} else {\r\n\t\t\thtmlTag.setAttribute('data-theme', localStorage.getItem('theme'));\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// == Change theme\r\n\tconst switchTheme = (): void => {\r\n\t\tif (!darkMode) {\r\n\t\t\tlocalStorage.setItem('theme', 'light');\r\n\t\t\thtmlTag.setAttribute('data-theme', localStorage.getItem('theme'));\r\n\t\t\tsetDarkMode(true);\r\n\t\t} else {\r\n\t\t\tlocalStorage.setItem('theme', 'dark');\r\n\t\t\thtmlTag.setAttribute('data-theme', localStorage.getItem('theme'));\r\n\t\t\tsetDarkMode(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<h1 className=\"header__title\">TODO</h1>\r\n\t\t\t<button onClick={() => switchTheme()}>\r\n\t\t\t\t<img src={darkMode ? iconSun : iconMoon} alt=\"iconBg\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoHeader;\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const CHANGE_CHECKED_TODO = 'CHANGE_CHECKED_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const CLEAR_COMPLETED_TODO = 'CLEAR_COMPLETED_TODO';\r\n\r\nexport const addTodo = (data: string) => {\r\n\treturn {\r\n\t\ttype: ADD_TODO,\r\n\t\tpayload: data,\r\n\t};\r\n};\r\n\r\nexport const changeCheckedTodo = (data: Object) => {\r\n\treturn {\r\n\t\ttype: CHANGE_CHECKED_TODO,\r\n\t\tpayload: data,\r\n\t};\r\n};\r\n\r\nexport const deleteTodo = (data: string) => {\r\n\treturn {\r\n\t\ttype: DELETE_TODO,\r\n\t\tpayload: data,\r\n\t};\r\n};\r\n\r\nexport const editTodo = (data: Object) => {\r\n\treturn {\r\n\t\ttype: EDIT_TODO,\r\n\t\tpayload: data,\r\n\t};\r\n};\r\n\r\nexport const clearCompletedTodo = (data?: string) => {\r\n\treturn {\r\n\t\ttype: CLEAR_COMPLETED_TODO,\r\n\t\tpayload: data,\r\n\t};\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodo } from '../redux/actions/todo.actions';\r\n\r\nconst TodoAdd = () => {\r\n\tconst [inputValue, setInputValue] = useState<string>('');\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst newTodo = (e: any): void => {\r\n\t\te.preventDefault();\r\n\t\tinputValue !== '' && dispatch(addTodo(inputValue));\r\n\t\tsetInputValue('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={newTodo} className=\"todoAdd\">\r\n\t\t\t<div className=\"todoAdd__icon\">\r\n\t\t\t\t<i className=\"fas fa-plus\" onClick={newTodo}></i>\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Create a new todo ...\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={e => setInputValue(e.target.value)}\r\n\t\t\t\tmaxLength={40}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default TodoAdd;\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React, { useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeCheckedTodo, deleteTodo, editTodo } from '../redux/actions/todo.actions';\r\nimport cross from '../images/icon-cross.svg';\r\nimport { ITodo } from '../redux/interface';\r\n\r\nconst Todo: React.FC<ITodo> = ({ id, todo, checked }) => {\r\n\tconst [inputContent, setInputContent] = useState<string>(todo);\r\n\tconst [isEdit, setIsEdit] = useState<boolean>(false);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleValidEditTodo = (): void => {\r\n\t\tif (inputContent !== '') {\r\n\t\t\tdispatch(editTodo({ id, inputContent }));\r\n\t\t\tsetIsEdit(!isEdit);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeCheckedTodo = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n\t\tif (inputContent !== '') {\r\n\t\t\tdispatch(changeCheckedTodo({ id, checked: e.target.checked }));\r\n\t\t\tisEdit && setIsEdit(!isEdit);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"todo\">\r\n\t\t\t<label className=\"todo__checker\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"checker__input\"\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\tonChange={handleChangeCheckedTodo}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"checker__custom\"></div>\r\n\t\t\t</label>\r\n\t\t\t<div className=\"todo__content\">\r\n\t\t\t\t{isEdit ? (\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={`${checked ? 'todo__content__checked' : ''}`}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={inputContent}\r\n\t\t\t\t\t\tonChange={e => setInputContent(e.target.value)}\r\n\t\t\t\t\t\tmaxLength={40}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span className={`${checked ? 'todo__content__checked' : ''}`}>\r\n\t\t\t\t\t\t{inputContent}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"todo__option\">\r\n\t\t\t\t{isEdit ? (\r\n\t\t\t\t\t<i className=\"fas fa-plus\" onClick={handleValidEditTodo}></i>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<i className=\"far fa-edit\" onClick={() => setIsEdit(!isEdit)}></i>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"cross\"\r\n\t\t\t\t\tsrc={cross}\r\n\t\t\t\t\talt=\"cross\"\r\n\t\t\t\t\tonClick={() => dispatch(deleteTodo(id))}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearCompletedTodo } from '../redux/actions/todo.actions';\r\nimport { ITodo } from '../redux/interface';\r\nimport { useMediaQuery } from 'react-responsive';\r\ninterface IState {\r\n\ttodos: Array<ITodo>;\r\n\tselectFilter: string;\r\n\tsetSelectFilter: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst TodoFilter: React.FC<IState> = ({ todos, selectFilter, setSelectFilter }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst isTabletOrMobile: boolean = useMediaQuery({ query: '(max-width: 600px)' });\r\n\r\n\treturn !isTabletOrMobile ? (\r\n\t\t<div className=\"todo__filter__desktop\">\r\n\t\t\t<span>{todos.length} items left</span>\r\n\t\t\t<button\r\n\t\t\t\tclassName={` ${selectFilter === 'all' ? 'todo__filter__desktop__active' : ''}`}\r\n\t\t\t\tonClick={() => setSelectFilter('all')}>\r\n\t\t\t\tAll\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={` ${\r\n\t\t\t\t\tselectFilter === 'active' ? 'todo__filter__desktop__active' : ''\r\n\t\t\t\t}`}\r\n\t\t\t\tonClick={() => setSelectFilter('active')}>\r\n\t\t\t\tActive\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={` ${\r\n\t\t\t\t\tselectFilter === 'completed' ? 'todo__filter__desktop__active' : ''\r\n\t\t\t\t}`}\r\n\t\t\t\tonClick={() => setSelectFilter('completed')}>\r\n\t\t\t\tCompleted\r\n\t\t\t</button>\r\n\t\t\t<span onClick={() => dispatch(clearCompletedTodo())}>Clear completed</span>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"todo__filter__mobile\">\r\n\t\t\t<div className=\"todo__filter__mobile__infos\">\r\n\t\t\t\t<span>{todos.length} items left</span>\r\n\t\t\t\t<span onClick={() => dispatch(clearCompletedTodo())}>Clear completed</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"todo__filter__mobile__select\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={` ${\r\n\t\t\t\t\t\tselectFilter === 'all' ? 'todo__filter__desktop__active' : ''\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\tonClick={() => setSelectFilter('all')}>\r\n\t\t\t\t\tAll\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={` ${\r\n\t\t\t\t\t\tselectFilter === 'active' ? 'todo__filter__desktop__active' : ''\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\tonClick={() => setSelectFilter('active')}>\r\n\t\t\t\t\tActive\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={` ${\r\n\t\t\t\t\t\tselectFilter === 'completed' ? 'todo__filter__desktop__active' : ''\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\tonClick={() => setSelectFilter('completed')}>\r\n\t\t\t\t\tCompleted\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoFilter;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TodoHeader from '../components/TodoHeader';\r\nimport { ITodo } from '../redux/interface';\r\nimport TodoAdd from '../components/TodoAdd';\r\nimport Todo from '../components/Todo';\r\nimport TodoFilter from '../components/TodoFilter';\r\nexport interface IDarkMode {\r\n\tdarkMode: boolean;\r\n\tsetDarkMode: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst TodosManager: React.FC<IDarkMode> = ({ darkMode, setDarkMode }) => {\r\n\tconst todos: Array<ITodo> = useSelector((state: any) => state);\r\n\tconst [selectFilter, setSelectFilter] = useState<string>('all');\r\n\r\n\treturn (\r\n\t\t<div className=\"todoManager\">\r\n\t\t\t<TodoHeader darkMode={darkMode} setDarkMode={setDarkMode} />\r\n\t\t\t<TodoAdd />\r\n\r\n\t\t\t<div>\r\n\t\t\t\t{todos\r\n\t\t\t\t\t.filter(todo => {\r\n\t\t\t\t\t\tif (selectFilter === 'all') return true;\r\n\t\t\t\t\t\telse if (selectFilter === 'active') return !todo.checked && true;\r\n\t\t\t\t\t\telse if (selectFilter === 'completed') return todo.checked && true;\r\n\t\t\t\t\t\telse if (selectFilter === 'clear') return false;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map(todo => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Todo\r\n\t\t\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\t\t\tid={todo.id}\r\n\t\t\t\t\t\t\t\ttodo={todo.todo}\r\n\t\t\t\t\t\t\t\tchecked={todo.checked}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<TodoFilter\r\n\t\t\t\ttodos={todos}\r\n\t\t\t\tselectFilter={selectFilter}\r\n\t\t\t\tsetSelectFilter={setSelectFilter}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodosManager;\r\n","import React, { useState } from 'react';\nimport TodosManager from './pages/TodosManager';\n\nfunction App() {\n\tconst [darkMode, setDarkMode] = useState<boolean>(\n\t\tlocalStorage.getItem('theme') === 'light' ? false : true,\n\t);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<TodosManager darkMode={darkMode} setDarkMode={setDarkMode} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { IAction, ITodo } from '../interface';\r\nimport {\r\n\tADD_TODO,\r\n\tCHANGE_CHECKED_TODO,\r\n\tDELETE_TODO,\r\n\tEDIT_TODO,\r\n\tCLEAR_COMPLETED_TODO,\r\n} from '../actions/todo.actions';\r\n\r\nconst initialStateTodos: Array<ITodo> = [\r\n\t{ id: uuidv4(), todo: 'Complete online javaScript course', checked: true },\r\n\t{ id: uuidv4(), todo: 'Jog around the park 3x', checked: false },\r\n\t{ id: uuidv4(), todo: '10 minutes meditation', checked: false },\r\n\t{ id: uuidv4(), todo: 'Read for 1 hour', checked: false },\r\n\t{ id: uuidv4(), todo: 'Pick up groceries', checked: false },\r\n\t{ id: uuidv4(), todo: 'Complete Todo App on Frontend Mentor', checked: false },\r\n];\r\n\r\nconst todosReducer = (state = initialStateTodos, action: IAction): Array<ITodo> => {\r\n\tif (localStorage.getItem('todosData'))\r\n\t\tstate = JSON.parse(localStorage.getItem('todosData') || '');\r\n\r\n\tswitch (action.type) {\r\n\t\tcase ADD_TODO:\r\n\t\t\tstate = [...state, { id: uuidv4(), todo: action.payload, checked: false }];\r\n\t\t\tlocalStorage.setItem('todosData', JSON.stringify(state));\r\n\t\t\treturn state;\r\n\t\tcase CHANGE_CHECKED_TODO:\r\n\t\t\tstate = state.map(todo => {\r\n\t\t\t\tif (todo.id === action.payload.id) todo.checked = action.payload.checked;\r\n\t\t\t\treturn todo;\r\n\t\t\t});\r\n\t\t\tlocalStorage.setItem('todosData', JSON.stringify(state));\r\n\t\t\treturn state;\r\n\r\n\t\tcase DELETE_TODO:\r\n\t\t\tstate = state.filter(todo => todo.id !== action.payload);\r\n\t\t\tlocalStorage.setItem('todosData', JSON.stringify(state));\r\n\t\t\treturn state;\r\n\r\n\t\tcase EDIT_TODO:\r\n\t\t\treturn (state = state.map(todo => {\r\n\t\t\t\tif (todo.id === action.payload.id) todo.todo = action.payload.todo;\r\n\t\t\t\treturn todo;\r\n\t\t\t}));\r\n\r\n\t\tcase CLEAR_COMPLETED_TODO:\r\n\t\t\tstate = state.filter(todo => {\r\n\t\t\t\tif (todo.checked === false) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\tlocalStorage.setItem('todosData', JSON.stringify(state));\r\n\t\t\treturn state;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default todosReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport todosReducer from \"./reducers/todos.reducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(todosReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/settings/styles.scss';\n\n// == Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}